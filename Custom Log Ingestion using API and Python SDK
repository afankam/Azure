++++++++++++++++++++++++++++++++++++++++++++ OS dependencies ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
install Python3.7 or Higher.
    - rh-python38.x86_64 
    - rh-python38-python-pip.noarch 
    - rh-python38-python-wheel.noarch 

Export rh-python-38 system wide
export PATH=$PATH:/opt/rh/rh-python38/root/usr/local/bin:/opt/rh/rh-python38/root/usr/bin

Install python required python libraries
python3.8 -m pip3.8 install --user azure-monitor-ingestion msrestazure.azure_cloud azure.mgmt.resource azure-identity

+++++++++++++++++++++++++++++++++++++++++++ Troubleshootings +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Error: "ImportError: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'OpenSSL 1.0.2k-fips  26 Jan 2017'
Fix:  downgrade to urllib3 v2 that support OpenSSL current version install on the system.
pip3.8 -m pip install --user urllib3==1.26.6

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


import json
import os
import logging
import sys



from azure.mgmt.resource import ResourceManagementClient, SubscriptionClient
from msrestazure.azure_cloud import AZURE_US_GOV_CLOUD as CLOUD
from azure.identity import DefaultAzureCredential, AzureAuthorityHosts,ClientSecretCredential
from azure.monitor.ingestion import LogsIngestionClient
from azure.core.exceptions import HttpResponseError

## Refer to /etc/profile.d/azure.sh for all defined environmnent variables

## Global variables
AZURE_TENANT_ID='XXXXXXXXXXXXXXXXXXXXXXXXXXXX'              
AZURE_CLIENT_ID='XXXXXXXXXXXXXXXXXXXXXXXXXXXX'
AZURE_CLIENT_SECRET='XXXXXXXXXXXXXXXXXXXXXXXXX'
DATA_COLLECTION_ENDPOINT='https://AAAAAAAAAAAAAAAAAAAAAAAAAAA'
LOGS_DCR_STREAM_NAME='Custom-F5asm_CL'
DCR_IMMUTABLE_ID='dcr-BBBBBBBBBBBBBBBBBBBBBBB'

endpoint = DATA_COLLECTION_ENDPOINT
auth_credential = ClientSecretCredential(tenant_id=AZURE_TENANT_ID, client_id=AZURE_CLIENT_ID, client_secret=AZURE_CLIENT_SECRET, authority=AzureAuthorityHosts.AZURE_GOVERNMENT)


client = LogsIngestionClient(endpoint, credential=auth_credential, credential_scopes=["https://monitor.azure.us//.default"], logging_enable=True)
rule_id = DCR_IMMUTABLE_ID
stream = LOGS_DCR_STREAM_NAME
file_path = '/var/log/f5-asm.log'
output_file_path = '/var/log/f5-asm.json'

## Create a logger for the 'azure.monitor.ingestion' SDK
logger = logging.getLogger('azure.monitor.ingestion')
logger.setLevel(logging.DEBUG)
logging.basicConfig(filename='/tmp/troubleshooting.log', level=logging.DEBUG)

## Configure a console output
handler = logging.StreamHandler(stream=sys.stdout)
logger.addHandler(handler)

print(client)


## Opens and reads log file
with open(file_path, 'r', encoding='utf-8') as f :
    data = f.read()

## Parses the JSON objects into a python list
objects = [json.loads(line) for line in  data.split('\n') if line.strip()]

## Writes  the list of objects to a new output file
with open(output_file_path, 'r+') as f_output :
    json.dump(objects, f_output)
    try:
        client.upload(rule_id, stream, f_output)
    except HttpReponseError() as e:
        print(f"File stream upload failed: {e}")
